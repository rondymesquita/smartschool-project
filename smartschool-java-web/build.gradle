buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
        maven { url 'http://repo.spring.io/milestone/'}
    }
    dependencies {
        // classpath 'org.gradle.api.plugins:gradle-cargo-plugin:1.5'
        classpath 'org.akhikhl.gretty:gretty:1.4.2'
    }
}

apply plugin: 'war'
apply plugin: 'java'
apply plugin: 'eclipse-wtp'
// apply plugin: 'cargo'
apply plugin: 'maven'
apply plugin: 'org.akhikhl.gretty'

repositories {
   mavenCentral()
   mavenLocal()
}

dependencies {
	 //providedCompile 'javax.servlet:servlet-api:2.5'
	   compile 'org.springframework:spring-webmvc:3.2.2.RELEASE'
	   compile 'org.springframework.security:spring-security-config:3.2.2.RELEASE'
	   compile 'org.springframework.security:spring-security-web:3.2.2.RELEASE'
	   compile 'org.springframework.security:spring-security-core:3.2.2.RELEASE'
	   
	   //runtime 'javax.servlet:jstl:1.2'
	   providedCompile group: 'javax.servlet.jsp', name: 'jsp-api', version:'2.1'
	   providedCompile group: 'javax.servlet', name: 'servlet-api', version:'2.5'
	   compile group: 'javax.servlet', name: 'jstl', version:'1.2'

	   // def cargoVersion = '1.4.5'
	   // cargo "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion",
	   //       "org.codehaus.cargo:cargo-ant:$cargoVersion"
	   
	   compile 'org.codehaus.jackson:jackson-core-asl:1.9.13'
	   compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'
	   compile 'com.fasterxml.jackson.core:jackson-databind:2.4.1.3'
	   compile 'io.github.benas:jpopulator:1.0.1'
	   compile 'postgresql:postgresql:8.3-603.jdbc4'
	   
	   compile 'br.com.async:smartschool-core:1.0-SNAPSHOT'
	   compile 'org.slf4j:slf4j-api:1.6.1'
	   compile 'org.slf4j:jcl-over-slf4j:1.6.1'
	   compile 'org.slf4j:slf4j-log4j12:1.6.1'
	   compile 'log4j:log4j:1.2.16'
	   compile 'org.projectlombok:lombok:1.14.8'
}

compileJava {
  sourceCompatibility = 1.6
  targetCompatibility = 1.7
}

compileJava.options.encoding = 'UTF-8'

javadoc {
	source = sourceSets.main.allJava
	classpath = configurations.compile
	exclude "**/application/**","**/repository/**"
}

task compileCore(type: Exec){
	description 'Install core as dependency'
	workingDir '../smartschool-core'
	executable 'gradle' 
	args 'install' //,'package' 
}
