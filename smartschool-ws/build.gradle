buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
        maven { url 'http://repo.spring.io/milestone/'}
    }
    dependencies {
        classpath 'org.gradle.api.plugins:gradle-cargo-plugin:1.5'
    }
}

apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply plugin: 'cargo'
apply plugin: 'maven'

repositories {
   mavenCentral()
   mavenLocal()
}

dependencies {
   providedCompile 'javax.servlet:servlet-api:2.5'
   compile 'org.springframework:spring-webmvc:3.2.2.RELEASE'
   compile 'org.springframework.security:spring-security-config:3.2.2.RELEASE'
   compile 'org.springframework.security:spring-security-web:3.2.2.RELEASE'
   compile 'org.springframework.security:spring-security-core:3.2.2.RELEASE'
   
   runtime 'javax.servlet:jstl:1.1.2'
   def cargoVersion = '1.4.5'
   cargo "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion",
         "org.codehaus.cargo:cargo-ant:$cargoVersion"
   
   compile 'org.codehaus.jackson:jackson-core-asl:1.9.13'
   compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'
   compile 'com.fasterxml.jackson.core:jackson-databind:2.4.1.3'
   compile 'io.github.benas:jpopulator:1.0.1'
   compile 'br.com.async:smartschool-core:1.0-SNAPSHOT'
   
   
}


cargo{
	containerId = "tomcat7x"
	port = 9090
	local{
		homeDir = file("../apache-tomcat-7.0.55")
		canonicalPath = file("../apache-tomcat-7.0.55")
	}
}

task downloadTomcat(type: Copy){
	def f = new File('../apache-tomcat-7.0.55.zip')
	def folder = new File('../apache-tomcat-7.0.55')
	
	if (!folder.exists()) {
	    new URL('http://ftp.unicamp.br/pub/apache/tomcat/tomcat-7/v7.0.55/bin/apache-tomcat-7.0.55.zip').withInputStream{ i -> f.withOutputStream{ it << i }}
	    def zipFile = file('../apache-tomcat-7.0.55.zip')
	    def outputDir = file("../")
	    from zipTree(zipFile)
	    into outputDir
	}
	
	doLast{
		f.delete()
	}
}